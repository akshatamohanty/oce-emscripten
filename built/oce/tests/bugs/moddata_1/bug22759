puts "TODO ?OCC12345 ALL: Process killed by CPU limit"
puts "TODO OCC11111 ALL: TEST INCOMPLETE"

cpulimit 30

puts "============"
puts "OCC22759"
puts "============"
puts ""
#######################################################################
# Crash during shape visualization
#######################################################################

set BugNumber OCC22759

catch { pload XDE }

restore [locate_data_file OCC22759-weldt6.brep] result
checkshape result
tclean result

set Deflection 0.001
incmesh result ${Deflection}

set tri_info [trinfo result]
regexp { +([-0-9.+eE]+) +triangles} $tri_info full tri
regexp { +([-0-9.+eE]+) +nodes} $tri_info full nod

regexp {deflection +([-0-9.+eE]+)} $tri_info full defl

set os "ALL"
if {[array get env os_type] != ""} {
  set os $env(os_type)
}

if { [regexp {Windows} $os ] } {
   puts "OS = Windows NT"
   set good_tri  248672
   set good_nod  127078
   set good_defl 0.0028424483708953232
} else {
   puts "OS = Linux"
   set good_tri  248724
   set good_nod  127104
   set good_defl 0.0028424483709341111
}

proc GetPercent {Value GoodValue} {
    set Percent 0.
    if {${GoodValue} != 0.} {
        set Percent [expr abs(${Value} - ${GoodValue}) / abs(double(${GoodValue})) * 100.]
    } elseif {${Value} != 0.} {
	set Percent [expr abs(${GoodValue} - ${Value}) / abs(double(${Value})) * 100.]
    } else {
	set Percent 0.
    }
    return ${Percent}
}

set percent_max 0.1
set status 0

set triangle_percent [GetPercent ${tri} ${good_tri}]
puts "triangle_percent = ${triangle_percent}"
if { ${triangle_percent} > ${percent_max} } {
   puts "triangle: Faulty ${BugNumber}"
   set status 1
} else {
   puts "triangle: OK ${BugNumber}"
}

set node_percent [GetPercent ${nod} ${good_nod}]
puts "node_percent = ${node_percent}"
if { ${node_percent} > ${percent_max} } {
   puts "node: Faulty ${BugNumber}"
   set status 1
} else {
   puts "node: OK ${BugNumber}"
}

set deflection_percent [GetPercent ${defl} ${good_defl}]
puts "deflection_percent = ${deflection_percent}"
if { ${deflection_percent} > ${percent_max} } {
   puts "deflection: Faulty ${BugNumber}"
   set status 1
} else {
   puts "deflection: OK ${BugNumber}"
}

# Resume
puts ""
if { ${status} != 0 } {
   puts "Faulty ${BugNumber}"
} else {
   puts "OK ${BugNumber}"
}

vinit
vdisplay result
vfit

vsetdispmode 1

set only_screen 1
set square 0
